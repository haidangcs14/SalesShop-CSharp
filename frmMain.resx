<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACJRqIAiUeiAIpHogCKSKMAi0mjAItKpACMSqQAjEukAI1MpQCNTaUAjk6mAI9PpgCPUKcAkFGnAJFS
        qACRU6gAkVOpAJJUqQCTVqoAlFeqAJRYqwCXXK0AmmCvAJpisACbY7AAnGSxAJxlsQCdZrIAnmeyAJ5o
        swCfaLMAn2m0AKNvtgCkcbcApXK4AKZ0uQCndbkAp3a6AKp6vACre7wAq3u9AKt8vQCsfr4ArX++AK6B
        vwCwg8AAsYXCALKGwgCziMMAto3FALePxgC4kMcAuZHHALqTyAC7lMkAu5XJALyWygC9mMsAvprMAMGe
        zgDBn84Awp/PAMSi0ADEo9EAxqbSAMio0wDIqdMAyarUAMqt1QDNsdgAzrLYAM6z2QDPtNkAz7XZANC1
        2gDSudsA07rcANO73ADUvN0A1b7eANbA3wDXwd8A2MLgANnD4QDZxOEA2sXiANrG4gDbx+MA3MjjANzJ
        4wDdyeQA3crkAN7M5QDfzuYA4M7mAOLR6ADi0ugA5NbqAOXX6wDo2+0A6NztAOne7gDq3u4A69/vAOvg
        7wDs4vAA7ePxAO3k8QDu5fIA8OfzAPDo8wDx6fQA8er0APLq9ADy6/UA8+z1APPt9gD17/cA9vH3APbx
        +AD38/kA+PT5APn1+gD59voA+vj7APv4+wD7+fwA/Pr8APz7/QD9/P0A/f3+AP79/gD+/v4A////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIxUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVAAAAAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAVAAAAAAAAAAAAAAACEhggIR8UBQAAAAAAAAAAAAAAABUAAAAAAAAAAAAIKkZk
        dHt7d2hOMBAAAAAAAAAAAAAAFQAAAAAAAAAAIUx7hYWFhYWFhYWAVysAAAAAAAAAAAAVAAAAAAAAADBk
        hYWFhYWFhYWFhYWFbzYAAAAAAAAAABUAAAAAAAAubYWFhYWFg3p6gIWFhYWFdjQAAAAAAAAAFQAAAAAA
        G2GFhYWFfFI1JCIwR3OFhYWFbiYAAAAAAAAVAAAAAABBhYWFhWoyCAAAAAABJ1uFhYWFUAsAAAAAABUA
        AAAAHG2FhYVwLwAAAAAAAAAAHVyFhYV+LAAAAAAAFQAAAAA3hIWFhT0AAAAAAAAAAAAALXuFhYVGAAAA
        AAAVAAAAA02FhYVsFwAAAAAAAAAAAAAIVYWFhWMAAAAAABUAAAAKX4WFhVQEAAAAAAAAAAAAAAA8hYWF
        cgAAAAAAFQAAAA9jhYWFSgAAAAAAAAAAAAAAADGChYV1AAAAAAAVAAAADmKFhYVLAAAAAAAAAAAAAAAA
        OIOFhXUAAAAAABUAAAAHVYWFhWANAAAAAAAAAAAAAABJhYWFawAAAAAAFQAAAABAhYWFeCkAAAAAAAAA
        AAAAG2mFhYVWAAAAAAAVAAAAACh7hYWFUQ8AAAAAAAAAAAJEhYWFhTkAAAAAABUAAAAADFiFhYWFQxIA
        AAAAAAAKPoSFhYVnGQAAAAAAFQAAAAAALnmFhYWFVi8TBAQSK0+EhYWFhDoAAAAAAAAVAAAAAAAAP4WF
        hYWFfWZZWWV6hYWFhYVMDwAAAAAAABUAAAAAAAAIQoSFhYWFhYWFhYWFhYWFVBoAAAAAAAAAFQAAAAAA
        AAAFO3GFhYWFhYWFhYWFf0YWAAAAAAAAAAAVAAAAAAAAAAAAJUhzgYWFhYWFfF0xBgAAAAAAAAAAABUA
        AAAAAAAAAAAAAh4zRVpeU0AqEQAAAAAAAAAAAAAAFQAAAAAAAAAAAAAAAAABCQkEAAAAAAAAAAAAAAAA
        AAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjFRUVFRUVFRUVFRUVFRUVFRUVFRUV
        FRUVFRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>